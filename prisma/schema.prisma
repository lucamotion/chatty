// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ActivityBucket {
  guildId   String   @map("guild_id")
  channelId String   @map("channel_id")
  userId    String   @map("user_id")
  date      DateTime @map("date") @db.Date
  hour      Int      @map("hour")
  updatedAt DateTime @updatedAt() @map("updated_at") @db.Timestamptz()

  counter Int @default(0) @map("counter")

  @@id([guildId, channelId, userId, date, hour])
  @@index(guildId)
  @@index(channelId)
  @@index(userId)
  @@index(date)
  @@index(hour)
  @@map("activity_bucket")
}

model EmojiBucket {
  guildId   String @map("guild_id")
  channelId String @map("channel_id")
  userId    String @map("user_id")
  emoji     String @map("emoji")

  counter Int @default(0) @map("counter")

  @@id([guildId, channelId, userId, emoji])
  @@index(guildId)
  @@index(channelId)
  @@index(userId)
  @@index(emoji)
  @@map("emoji_bucket")
}

model ReactionBucket {
  guildId   String @map("guild_id")
  channelId String @map("channel_id")
  emoji     String @map("emoji")

  reactorId String @map("reactor_id")
  reacteeId String @map("reactee_id")

  counter Int @default(0) @map("counter")

  @@id([guildId, channelId, emoji, reactorId, reacteeId])
  @@index(guildId)
  @@index(channelId)
  @@index(emoji)
  @@index(reactorId)
  @@index(reacteeId)
  @@map("reaction_bucket")
}
